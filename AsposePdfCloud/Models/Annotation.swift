//
// Annotation.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Provides annotation. */

open class Annotation: LinkElement {

    /** Get the annotation color. */
    public var color: Color?
    /** Get the annotation content. */
    public var contents: String?
    /** The date and time when the annotation was created. */
    public var creationDate: String?
    /** Get the annotation subject. */
    public var subject: String?
    /** Get the annotation title. */
    public var title: String?
    /** The date and time when the annotation was last modified. */
    public var modified: String?


    

    // Encodable protocol methods

    public override func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(color, forKey: "Color")
        try container.encodeIfPresent(contents, forKey: "Contents")
        try container.encodeIfPresent(creationDate, forKey: "CreationDate")
        try container.encodeIfPresent(subject, forKey: "Subject")
        try container.encodeIfPresent(title, forKey: "Title")
        try container.encodeIfPresent(modified, forKey: "Modified")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        color = try container.decodeIfPresent(Color.self, forKey: "Color")
        contents = try container.decodeIfPresent(String.self, forKey: "Contents")
        creationDate = try container.decodeIfPresent(String.self, forKey: "CreationDate")
        subject = try container.decodeIfPresent(String.self, forKey: "Subject")
        title = try container.decodeIfPresent(String.self, forKey: "Title")
        modified = try container.decodeIfPresent(String.self, forKey: "Modified")
        try super.init(from: decoder)
    }
}

